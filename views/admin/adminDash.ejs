<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://code.jquery.com/jquery-3.7.1.js"
        integrity="sha256-eKhayi8LEQwp4NKxN+CfCh+3qOVUtJn3QNZ0TciWLP4=" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.20.0/jquery.validate.min.js"
        integrity="sha512-WMEKGZ7L5LWgaPeJtw9MBM4i5w5OSBlSjTjCtSnvFJGSVD26gE5+Td12qN5pvWXhuWaWcVwF++F7aqu9cvqP0A=="
        crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.20.0/additional-methods.min.js"
        integrity="sha512-TiQST7x/0aMjgVTcep29gi+q5Lk5gVTUPE9XgN0g96rwtjEjLpod4mlBRKWHeBcvGBAEvJBmfDqh2hfMMmg+5A=="
        crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            background: linear-gradient(45deg, #057979, #d8feff, #fbc2eb, #a18cd1, #2febe5);
            background-size: 400% 400%;
            animation: gradientAnimation 8s ease infinite;
        }

        @keyframes gradientAnimation {
            0% {
                background-position: 0% 50%;
            }

            50% {
                background-position: 100% 50%;
            }

            100% {
                background-position: 0% 50%;
            }
        }

        .container {
            width: 90%;
            max-width: 1200px;
            background-color: #fff;
            padding: 30px;
            border-radius: 8px;
            box-shadow: 10px 10px 15px rgba(0, 0, 0, 0.5);
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .header h1 {
            font-size: 24px;
            color: #333;
        }

        .logout {
            padding: 12px 20px;
            background-color: #d92424;
            color: #fff;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            position: relative;
            left: 1040px;
            margin-bottom: 10px;
            transition: background-color 0.3s;
        }

        .logout:hover {
            background-color: #c10000;
        }

        .button {
            padding: 12px 20px;
            background-color: #28a745;
            color: #fff;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .button:hover {
            background-color: #218838;
        }

        .search-bar {
            padding: 10px 15px;
            font-size: 16px;
            border: 2px solid #ccc;
            border-radius: 5px;
            width: 300px;
            outline: none;
        }

        .search-bar:focus {
            border-color: #28a745;
        }

        .form-group input:focus {
            outline: none;
            border-color: #28a745;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        th,
        td {
            padding: 12px;
            text-align: left;
            border: 1px solid #ddd;
        }

        th {
            background-color: #f8f9fa;
            font-weight: bold;
            color: #333;
        }

        tr:nth-child(even) {
            background-color: #f9f9f9;
        }

        tr:hover {
            background-color: #f1f1f1;
        }

        .action-buttons button {
            padding: 6px 12px;
            font-size: 14px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .edit-btn {
            padding: 5px 5px;
            background-color: #28a745;
            color: #fff;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .edit-btn:hover {
            background-color: #0056b3;
        }

        .delete-btn {
            background-color: #dc3545;
            padding: 5px 5px;
            color: #fff;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        a {
            text-decoration: none;
        }

        .delete-btn:hover {
            background-color: #72010c;
        }

        .modal {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            z-index: 1000;
            display: none;
            width: 400px;
        }

        .modal.active {
            display: block;
        }

        .modal-header {
            font-size: 18px;
            margin-bottom: 15px;
            font-weight: bold;
        }

        .modal-footer {
            margin-top: 15px;
            text-align: right;
        }

        .overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            display: none;
            z-index: 999;
        }

        .overlay.active {
            display: block;
        }

        .form-group {
            margin-bottom: 15px;
        }

        .form-group label {
            font-weight: bold;
            margin-bottom: 5px;
        }

        .form-group input {
            width: 100%;
            padding: 10px;
            font-size: 16px;
            border: 2px solid #ccc;
            border-radius: 5px;
        }

        .form-group input:focus {
            border-color: #28a745;
        }

        .form-group input[type="submit"] {
            background-color: #28a745;
            color: white;
            cursor: pointer;
        }

        .form-group input[type="submit"]:hover {
            background-color: #218838;
        }
    </style>
</head>

<body>
    <div class="container">
        <form action="/adminlogout" method="post">
            <button class="logout">Log Out</button>
        </form>
        <div class="header">
            <h1>Admin Dashboard</h1>
            <div>
                <button class="button" id="addUserButton">Add User</button>
                <input type="text" class="search-bar" placeholder="Search User" />
            </div>
        </div>

        <table class="table table-dark table-hover">
            <thead>
                <tr>
                    <th scope="col">Name</th>
                    <th scope="col">Email</th>
                    <th scope="col">Phone</th>
                    <th scope="col">Action</th>
                </tr>
            </thead>

            <% for(let i=0;i<userData.length;i++){ %>
                <tbody>
                    <tr>
                        <td>
                            <%= userData[i]?.name %>
                        </td>
                        <td>
                            <%= userData[i]?.email %>
                        </td>
                        <td>
                            <%= userData[i]?.phone %>
                        </td>
                        <td>
                            <a href="/adminEdit/<%= userData[i]?._id %>">
                                <button class="edit-btn" id="edit<%i%>" type="button">
                                    Edit
                                </button>
                            </a>
                            <button type="button" onclick="deleteUser('<%= userData[i]?._id %>')" class="delete-btn">
                                delete
                            </button>
                        </td>

                    </tr>
                </tbody>
                <% } %>
        </table>

        <!-- New User Modal -->
        <div class="modal" id="userModal">
            <div class="modal-header">Add User</div>
            <div class="modal-body">
                <form id="adduser">
                    <div class="form-group">
                        <label for="username">Username</label>
                        <input type="text" id="username" placeholder="Enter username" class="newadd" />
                        <p id="username-err" style="display: none;"></p>
                    </div>
                    <div class="form-group">
                        <label for="email">Email</label>
                        <input type="email" id="email" placeholder="Enter email" class="newadd" />
                        <p id="email-err" style="display: none;"></p>
                    </div>
                    <div class="form-group">
                        <label for="password">Password</label>
                        <input type="password" id="password" placeholder="Enter password" class="newadd" />
                        <p id="password-err" style="display: none;"></p>
                    </div>
                    <div class="form-group">
                        <label for="phone">Phone</label>
                        <input type="tel" id="phone" placeholder="Enter phone number" class="newadd" />
                        <p id="phone-err" style="display: none;"></p>
                    </div>
                    <p style="display: none; color: red;" id="">Email already exits</p>
            </div>
            <div class="modal-footer">
                <button type="submit" class="button" id="saveUserButton">Save</button>
            </form>
                <button class="button" id="closeModalButton" style="background-color: #6c757d;">Close</button>
            </div>
        </div>
        <div class="overlay" id="overlay"></div>

    </div>

    <script>
        const addUserButton = document.getElementById('addUserButton');
        const userModal = document.getElementById('userModal');
        const overlay = document.getElementById('overlay');
        const closeModalButton = document.getElementById('closeModalButton');

        addUserButton.addEventListener('click', () => {
            userModal.classList.add('active');
            overlay.classList.add('active');
        });

        closeModalButton.addEventListener('click', () => {
            userModal.classList.remove('active');
            overlay.classList.remove('active');
        });

        overlay.addEventListener('click', () => {
            userModal.classList.remove('active');
            overlay.classList.remove('active');
        });
    </script>

    <script>
    async function deleteUser(id) {
        Swal.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, delete it!"
        }).then(async (result) => {
            if (result.isConfirmed) {
                const respose = await fetch(`/userDelete?userId=${id}`, { method: 'DELETE' })
                const result = await respose.json()
                console.log(result);
                if (result.success) {
                    Swal.fire({
                        title: "Deleted!",
                        text: "Your file has been deleted.",
                        icon: "success"
                    }).then(() => window.location.reload())

                }

            }
        });

    }
</script>

    <script>
        // Get the search bar and table elements
        const searchBar = document.querySelector(".search-bar");
        const table = document.querySelector("table");

        // Add an event listener to the search bar
        searchBar.addEventListener("input", function () {
            const filter = this.value.toLowerCase(); // Get the search input in lowercase
            const rows = table.querySelectorAll("tbody tr"); // Select all rows in the table body

            rows.forEach((row) => {
                const nameCell = row.querySelector("td:first-child"); // Get the first cell (Name)
                const name = nameCell.textContent.toLowerCase(); // Convert name to lowercase

                // Show or hide the row based on the filter
                if (name.includes(filter)) {
                    row.style.display = ""; // Show the row
                } else {
                    row.style.display = "none"; // Hide the row
                }
            });
        });

    </script>

    <script>
        // Username Validation
        document.getElementById("username").addEventListener("blur", function () {
            const username = this.value.trim();
            const usernameError = document.getElementById("username-err");
            const usernameRegex = /^[A-Za-z\s]+$/;

            if (!username) {
                usernameError.textContent = "Username is required.";
                usernameError.style.color = "red";
                usernameError.style.display = "block";
            } else if (!usernameRegex.test(username)) {
                usernameError.textContent = "Username must contain only alphabets.";
                usernameError.style.color = "red";
                usernameError.style.display = "block";
            } else {
                usernameError.style.display = "none";
            }
        });

        // Email Validation
        document.getElementById("email").addEventListener("blur", function () {
            const email = this.value.trim();
            const emailError = document.getElementById("email-err");
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

            if (!email) {
                emailError.textContent = "Email is required.";
                emailError.style.color = "red";
                emailError.style.display = "block";
            } else if (!emailRegex.test(email)) {
                emailError.textContent = "Please enter a valid email address.";
                emailError.style.color = "red";
                emailError.style.display = "block";
            } else {
                emailError.style.display = "none";
            }
        });

        // Password Validation
        document.getElementById("password").addEventListener("blur", function () {
            const password = this.value.trim();
            const passwordError = document.getElementById("password-err");
            const passwordRegex = /^(?=.*\d).{8,}$/;

            if (!password) {
                passwordError.textContent = "Password is required.";
                passwordError.style.color = "red";
                passwordError.style.display = "block";
            } else if (!passwordRegex.test(password)) {
                passwordError.textContent = "Password must be at least 8 characters long and include at least one number.";
                passwordError.style.color = "red";
                passwordError.style.display = "block";
            } else {
                passwordError.style.display = "none";
            }
        });

        // Phone Validation (Optional but Required in this case)
        document.getElementById("phone").addEventListener("blur", function () {
            const phone = this.value.trim();
            const phoneError = document.getElementById("phone-err");

            if (!phone) {
                phoneError.textContent = "Phone number is required.";
                phoneError.style.color = "red";
                phoneError.style.display = "block";
            } else if (!/^\d{10}$/.test(phone)) {
                phoneError.textContent = "Please enter a valid 10-digit phone number.";
                phoneError.style.color = "red";
                phoneError.style.display = "block";
            } else {
                phoneError.style.display = "none";
            }
        });

        // Final Validation on Submit
        document.getElementById("saveUserButton").addEventListener("click", function (event) {
            const fields = ["username", "email", "password", "phone"];
            let isValid = true;

            fields.forEach((field) => {
                const input = document.getElementById(field);
                const error = document.getElementById(`${field}-err`);

                if (!input.value.trim()) {
                    error.textContent = `${field.charAt(0).toUpperCase() + field.slice(1)} is required.`;
                    error.style.color = "red";
                    error.style.display = "block";
                    isValid = false;
                }
            });

            if (!isValid) { 
                event.preventDefault(); // Prevent form submission if validation fails
            }
        });

    </script>

<!-- adduser validate -->
<script>

    $('#adduser').validate({
        submitHandler: async function (form, event) {
            event.preventDefault();
            let formData = {
                name: form.username.value,
                email: form.email.value,
                phone: form.phone.value,
                password: form.password.value
            }

            let response = await fetch('/adminadd', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(formData)
            })
            const result = await response.json()
            console.log(result);
            if (result.emailExists) {
                await Swal.fire({
                    icon: "error",
                    title: "Oops...",
                    text: "Email already exists!"
                });
            } else if (result.success) {
                await Swal.fire({
                    icon: "success",
                    title: "New User Added",
                    showConfirmButton: false,
                    timer: 1500
                });
                (() => window.location.reload())()
            }
        }
    });

</script>

</body>

</html>